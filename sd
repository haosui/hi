import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
import 'package:todouiexample/screens/create_task.dart';

class TaskScreen extends StatefulWidget {
  @override
  _TaskScreenState createState() => _TaskScreenState();
}

class _TaskScreenState extends State<TaskScreen> {
  List<Task> arr = [
    Task(name: "task 1 - Hari Prasad Chaudhary", status: "Completed"),
    Task(name: "task 2 - David Mars", status: "Completed"),
    Task(name: "task 3 -Aurn Thapa", status: "Completed"),
    Task(name: "task 4 - John Bal", status: "Completed")
  ];

  void edit(int indexx) {
    setState(() {
      Task k = arr[indexx];
      if (k.status == "Completed")
        arr[indexx].status = "Incomplete";
      else
        arr[indexx].status = "Completed";
    });
  }

  void delete(int indexx) {
    setState(() {
      arr.removeAt(indexx);
    });
  }

  void add() {
    setState(() {
      arr.add(new Task(name: "new Task ", status: "Incomplete"));
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: Container(
        width: double.infinity,
        child: Row(
          children: [
            Expanded(
              child: Container(
                padding: const EdgeInsets.all(32),
                child: Column(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    Text(
                      "TASKS LIST",
                      style: TextStyle(
                          fontSize: 18,
                          height: 1.2,
                          letterSpacing: 1,
                          fontWeight: FontWeight.w900,
                          color: Colors.blueGrey[200]),
                    ),

                    SizedBox(
                      height: 4,
                    ),

                    Row(
                      children: [
                        Text(
                          "Work",
                          style: TextStyle(
                            fontSize: 50,
                            height: 1.2,
                            fontWeight: FontWeight.w700,
                            color: Colors.grey[800],
                          ),
                        ),
                        Spacer(),
                        IconButton(
                          icon: Icon(Icons.edit),
                          onPressed: () {},
                        )
                      ],
                    ),

                    Expanded(
                      child: ListView.builder(
                        itemBuilder: (context, index) {
                          return Container(
                            padding: const EdgeInsets.all(12),
                            decoration: BoxDecoration(
                                border: Border.all(color: Colors.blueGrey[100]),
                                color: index == 1
                                    ? Colors.purple[400]
                                    : Colors.transparent),
                            child: Column(
                              crossAxisAlignment: CrossAxisAlignment.start,
                              children: [
                                Row(
                                  crossAxisAlignment: CrossAxisAlignment.start,
                                  children: [
                                    Expanded(
                                      child: Text(
                                        arr[index].name,
                                        style: TextStyle(
                                            fontWeight: FontWeight.w500,
                                            fontSize: 16,
                                            color: index == 1
                                                ? Colors.white
                                                : Colors.grey[800]),
                                      ),
                                    ),
                                    SizedBox(
                                      width: 4,
                                    ),
                                    index == 1
                                        ? Icon(
                                            Icons.check_circle,
                                            color: Colors.white,
                                          )
                                        : Container()
                                  ],
                                ),
                                SizedBox(
                                  height: 8,
                                ),
                                Row(
                                  children: [
                                    Text(
                                      "18 NOV 2021",
                                      style: TextStyle(
                                          fontWeight: FontWeight.w500,
                                          fontSize: 12,
                                          color: index == 1
                                              ? Colors.white70
                                              : Colors.grey[500]),
                                    ),
                                    FloatingActionButton(
                                      onPressed: () => edit(index),
                                      child: Icon(Icons.edit),
                                      backgroundColor: Colors.purple,
                                      mini: true,
                                    ),
                                    FloatingActionButton(
                                      onPressed: () => delete(index),
                                      child: Icon(Icons.delete),
                                      backgroundColor: Colors.purple,
                                      mini: true,
                                    ),
                                    Spacer(),
                                    index == 1
                                        ? Text(
                                            arr[index].status,
                                            style: TextStyle(
                                                fontWeight: FontWeight.w900,
                                                fontSize: 12,
                                                color: Colors.white),
                                          )
                                        : Text(
                                            arr[index].status,
                                            style: TextStyle(
                                                fontWeight: FontWeight.w500,
                                                fontSize: 12,
                                                color: index == 1
                                                    ? Colors.white70
                                                    : Colors.grey[500]),
                                          ),
                                  ],
                                ),
                              ],
                            ),
                          );
                        },
                        itemCount: arr.length,
                      ),
                    ),

                    ///For spacing
                    SizedBox(
                      height: 16,
                    ),

                    ///Button for add new task
                    Container(
                      width: double.infinity,
                      child: FlatButton(
                        shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(10)),
                        padding: const EdgeInsets.symmetric(vertical: 16),
                        color: Colors.purple[400],
                        child: Text(
                          "ADD NEW TASK",
                          style: TextStyle(
                              fontSize: 18,
                              color: Colors.white,
                              fontWeight: FontWeight.w900),
                        ),
                        onPressed: () => add(),
                      ),
                    )
                  ],
                ),
              ),
            ),
          ],
        ),
      ),
    );
  }
}

class Task {
  String name, status;
  Task({this.name, this.status});
}
